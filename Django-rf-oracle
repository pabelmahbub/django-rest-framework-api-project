To connect a Django REST Framework backend with an Oracle database for a Vue.js 3 app, you'll need to follow these steps:

Step 1: Install Django REST Framework and Oracle Database Adapter First, make sure you have Django installed, and then install Django REST Framework and the Oracle Database adapter.


pip install djangorestframework
pip install cx_Oracle

Step 2: Configure Django Settings Next, configure your Django settings by adding the Django REST Framework in the INSTALLED_APPS section and the database settings for Oracle:


# settings.py

INSTALLED_APPS = [
    ...
    'rest_framework',
]


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'database_name',
        'USER': 'username',
        'PASSWORD': 'password',
        'HOST': 'host_string',
        'PORT': 'port',
    }
}

Step 3: Create a Django Model, Serializer, and View Now, create a Django model for your data, and then create a serializer and view to expose the model's data through the Django REST Framework.


# models.py

from django.db import models

class MyModel(models.Model):
    field1 = models.CharField(max_length=255)
    field2 = models.CharField(max_length=255)


# serializers.py

from rest_framework import serializers
from .models import MyModel

class MyModelSerializer(serializers.ModelSerializer):
    class Meta:
        model = MyModel
        fields = '__all__'


# views.py

from rest_framework import generics
from .models import MyModel
from .serializers import MyModelSerializer

class MyModelList(generics.ListCreateAPIView):
    queryset = MyModel.objects.all()
    serializer_class = MyModelSerializer

Step 4: Configure Django URL routing Configure the Django URL routing to serve the REST API endpoint created in the previous steps:


# urls.py

from django.urls import path
from . import views

urlpatterns = [
    path('api/mymodel/', views.MyModelList.as_view(), name='mymodel-list'),
]

Step 5: Fetch Data in Vue 3 App Now that you have Django REST Framework serving data from the Oracle database, fetch the data in your Vue 3 app by making an API request from a Vue component.

<template>
  <div>
    <ul>
      <li v-for="item in data" :key="item.id">{{ item.field1 }} - {{ item.field2 }}</li>
    </ul>
  </div>
</template>

<script>
import axios from 'axios';

export default {
  data() {
    return {
      data: [],
    };
  },
  async created() {
    const response = await axios.get('/api/mymodel/');
    this.data = response.data;
  },
};
</script>

This component makes a request to the Django REST API to fetch the data from the Oracle database and displays it in a list. Note that you'll need to install axios for making HTTP requests:


npm install axios

Now your Vue 3 app is connected to Django REST Framework with an Oracle database. You can build more components and API endpoints to interact with your data.




